{
    "name": "Sanket Magodia",
    "email": "magodiasanket@gmail.com",
    "website": "magodiasanket.info",
    "content": "Skills\nLanguages: Python, JavaScript, TypeScript, C/C++, SQL, HTML/CSS\nMachine Learning & AI: PyTorch, TensorFlow, Scikit-Learn, NLTK, SpaCy, OpenCV, HuggingFace, LangChain, Transformer, FAISS, MLflow, PySpark, OpenAI, Matplotlib, Seaborn, Collab\nWeb and Backend: React, FastAPI, Django, Flask, PostgreSQL, MySQL, MongoDB, Redis, Neo4J, ExpressJs NodeJs\nCloud & Tools: AWS(SageMaker, EC2, Lambda, Bedrock, RDS, ECS, EKS), Docker, Kubernetes, Jenkins, Git, Linux\nCertifications: TensorFlow Developer Specialization - DeepLearning.AI, Data Science in Python - University of Michigan\n\nExperience\nResearch Intern May 2023 – Present\nBinghamton University Binghamton, New York\n• Developed voice-enabled financial advisory platform using Nous Hermes 2 LLM and FAISS vector store, creating expense tracking, prediction visualization, and personalized Q&A features through RAG pipeline\n• Enhanced G.A.I.N framework by implementing DCGAN architecture for missing data imputation, improving upon traditional GAN approach with 13% higher accuracy in data reconstruction\n• Innovated silicon photonic component design by replacing VGGNet/ResNet with Data-Efficient Image Transformer (DeiT), achieving 12% better component generation through improved feature extraction\n• Built university-wide research platform using GPT-4 and AWS Bedrock APIs, enabling semantic paper search and automated knowledge extraction for internal research data accessibility\n\nSoftware Engineer Nov 2021 – May 2022\nWonderBiz Technologies Private Limited (Client: Schneider Electric) Mumbai, India\n• Architected end-to-end RFQ processing pipeline, integrating custom spaCy NER and ensemble regression models(AdaBoost and Random Forest) with containerized deployment using Kubernetes, achieving 95% accuracy in PLC price predictions\n• Engineered full-stack solution for RFQ price prediction for Schneider Electric, utilizing a React frontend and FastAPI microservices with Jenkins CI/CD pipeline on AWS EC2, reducing manual quotation processing time from 7 days to 4 hours\n• Prototyped ML pipeline POC for casting defect detection using YOLOv5 on AWS SageMaker in a 2-member team, demonstrating proof-of-concept with React (TypeScript) dashboard and IoT integration achieving 78% detection accuracy\n• Optimized existing P&ID extraction pipeline by fine-tuning Mask R-CNN model, achieving 6% accuracy improvement over Detectron 2 baseline\n\nSoftware Engineer Sep 2020 – Nov 2021\nFreeloc IT Solutions Mumbai, India\n• Automated multi-threaded web scraping system using Python and Selenium, integrating with SQL Server for efficient storage and retrieval enabling concurrent data extraction from 25+ e-commerce platforms, reducing manual effort by 96%\n• Built scalable PySpark ETL pipeline to process 10,000+ daily product records from SQL Server, automating segment-wise market analysis for South African e-commerce platforms\n• Designed ML-driven customer segmentation model using K-means clustering on 5,000+ profiles, generating insights through Power BI dashboards that increased ad campaign’s CTR by 15%\n\nProjects\nReadQuest.site | Python, FastAPI, MongoDB, React, Render/Vercel, Git Actions, PyTest\n• Engineered a book discovery platform using FastAPI and MongoDB, implementing collaborative filtering for personalized recommendations and click-to-define feature serving 1,000+ daily users\n• Integrated pytest into CI/CD pipelines on Render/Vercel for automated testing with 90%+ coverage, ensuring robust API performance and seamless deployments\n\nOCR Text Extractor| Python, OpenCV, Keras, CNN, TensorFlow, Flask\n• Developed a custom character segmentation algorithm for image preprocessing and feature extraction with OpenCV\n• Implemented a CNN model using Keras, achieving 74% character recognition accuracy; deployed as a web service for document text extraction\n\nCPU Pipeline Simulator | C Programming\n• Developed 11-stage CPU pipeline simulator implementing inst fetch, decode, execution, memory access, and writeback stages\n• Engineered advanced features including branch prediction with BTB (16-entry branch target buffer), 3-bit prediction counters, and RAW hazard detection\n• Managed 19 different instruction types including arithmetic operations, load/store, and conditional branches\n\nEducation\nBinghamton University Binghamton, New York\nMaster of Science in Computer Science, Artificial Intelligence (CGPA: 3.56/4.00) Aug 2022 – Dec 2024\nRelevant Coursework: Deep Learning, Machine Learning, Visual Info Processing, Data Mining, Design and Analysis of Algorithms, Computer Architecture and Organization, Software Engineering, Operating System, Database Management System"
}
